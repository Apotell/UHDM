@0xfff7299129556877;

struct ObjIndexType {
   index @0 : UInt64;
   type  @1 : UInt32;
}

struct UhdmRoot {
  designs @0 : List(Design);
  symbols @1 : List(Text);
  factoryProcess @2 :List(Process);
  factoryPropertydecl @3 :List(Propertydecl);
  factorySequencedecl @4 :List(Sequencedecl);
  factoryVirtualinterfacevar @5 :List(Virtualinterfacevar);
  factoryBegin @6 :List(Begin);
  factoryNamedbegin @7 :List(Namedbegin);
  factoryDistribution @8 :List(Distribution);
  factoryOperation @9 :List(Operation);
  factoryRefobj @10 :List(Refobj);
  factoryTask @11 :List(Task);
  factoryFunction @12 :List(Function);
  factoryModport @13 :List(Modport);
  factoryInterfacetfdecl @14 :List(Interfacetfdecl);
  factoryContassign @15 :List(Contassign);
  factoryPort @16 :List(Port);
  factoryPrimitive @17 :List(Primitive);
  factoryModpath @18 :List(Modpath);
  factoryTchk @19 :List(Tchk);
  factoryDefparam @20 :List(Defparam);
  factoryIodecl @21 :List(Iodecl);
  factoryAliasstmt @22 :List(Aliasstmt);
  factoryClockingblock @23 :List(Clockingblock);
  factoryRange @24 :List(Range);
  factoryParamassign @25 :List(Paramassign);
  factoryInterfacearray @26 :List(Interfacearray);
  factoryProgramarray @27 :List(Programarray);
  factoryModulearray @28 :List(Modulearray);
  factoryGatearray @29 :List(Gatearray);
  factorySwitcharray @30 :List(Switcharray);
  factoryUdparray @31 :List(Udparray);
  factoryArraynet @32 :List(Arraynet);
  factoryLogicvar @33 :List(Logicvar);
  factoryArrayvar @34 :List(Arrayvar);
  factoryNamedevent @35 :List(Namedevent);
  factoryNamedeventarray @36 :List(Namedeventarray);
  factorySpecparam @37 :List(Specparam);
  factoryClassdefn @38 :List(Classdefn);
  factoryInterface @39 :List(Interface);
  factoryProgram @40 :List(Program);
  factoryPackage @41 :List(Package);
  factoryModule @42 :List(Module);
  factoryDesign @43 :List(Design);

}


struct Process {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Propertydecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Sequencedecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Virtualinterfacevar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Begin {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
propertydecls @9 :List(UInt64);
sequencedecls @10 :List(UInt64);
namedevents @11 :List(UInt64);
namedeventarrays @12 :List(UInt64);
virtualinterfacevars @13 :List(UInt64);
logicvar @14 :List(UInt64);
arrayvar @15 :List(UInt64);
arrayvarmem @16 :List(UInt64);
}
struct Namedbegin {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
concurrentassertions @6 :List(ObjIndexType);
variables @7 :List(ObjIndexType);
parameters @8 :List(ObjIndexType);
propertydecls @9 :List(UInt64);
sequencedecls @10 :List(UInt64);
namedevents @11 :List(UInt64);
namedeventarrays @12 :List(UInt64);
virtualinterfacevars @13 :List(UInt64);
logicvar @14 :List(UInt64);
arrayvar @15 :List(UInt64);
arrayvarmem @16 :List(UInt64);
}
struct Distribution {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Operation {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiOpType @4 :Int64;
operands @5 :List(ObjIndexType);
vpiDecompile @6 :UInt64;
vpiSize @7 :Int64;
}
struct Refobj {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Task {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
vpiMethod @6 :Bool;
vpiAccessType @7 :Int64;
vpiVisibility @8 :Int64;
vpiVirtual @9 :Bool;
vpiAutomatic @10 :Bool;
vpiDPIContext @11 :Bool;
vpiDPICStr @12 :Int64;
vpiDPICIdentifier @13 :UInt64;
leftexpr @14 :ObjIndexType;
rightexpr @15 :ObjIndexType;
variables @16 :ObjIndexType;
classdefn @17 :UInt64;
refobj @18 :UInt64;
iodecl @19 :UInt64;
}
struct Function {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiSigned @4 :Bool;
vpiSize @5 :Int64;
vpiFuncType @6 :Int64;
vpiName @7 :UInt64;
vpiFullName @8 :UInt64;
vpiMethod @9 :Bool;
vpiAccessType @10 :Int64;
vpiVisibility @11 :Int64;
vpiVirtual @12 :Bool;
vpiAutomatic @13 :Bool;
vpiDPIContext @14 :Bool;
vpiDPICStr @15 :Int64;
vpiDPICIdentifier @16 :UInt64;
leftexpr @17 :ObjIndexType;
rightexpr @18 :ObjIndexType;
variables @19 :ObjIndexType;
classdefn @20 :UInt64;
refobj @21 :UInt64;
iodecl @22 :UInt64;
}
struct Modport {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
iodecls @5 :List(UInt64);
interface @6 :UInt64;
}
struct Interfacetfdecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiAccessType @4 :UInt64;
tasks @5 :List(UInt64);
functions @6 :List(UInt64);
}
struct Contassign {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Port {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Primitive {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Modpath {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Tchk {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Defparam {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Iodecl {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Aliasstmt {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Clockingblock {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Range {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Paramassign {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Interfacearray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
paramassigns @4 :List(UInt64);
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSize @7 :Int64;
expr @8 :ObjIndexType;
leftexpr @9 :ObjIndexType;
rightexpr @10 :ObjIndexType;
instances @11 :List(ObjIndexType);
range @12 :UInt64;
modules @13 :List(UInt64);
}
struct Programarray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
vpiFullName @5 :UInt64;
vpiSize @6 :Int64;
expr @7 :ObjIndexType;
leftexpr @8 :ObjIndexType;
rightexpr @9 :ObjIndexType;
instances @10 :List(ObjIndexType);
range @11 :UInt64;
modules @12 :List(UInt64);
}
struct Modulearray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
paramassigns @4 :List(UInt64);
vpiName @5 :UInt64;
vpiFullName @6 :UInt64;
vpiSize @7 :Int64;
expr @8 :ObjIndexType;
leftexpr @9 :ObjIndexType;
rightexpr @10 :ObjIndexType;
instances @11 :List(ObjIndexType);
range @12 :UInt64;
modules @13 :List(UInt64);
}
struct Gatearray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
delay @4 :ObjIndexType;
primitives @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
vpiSize @8 :Int64;
expr @9 :ObjIndexType;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
instances @12 :List(ObjIndexType);
range @13 :UInt64;
modules @14 :List(UInt64);
}
struct Switcharray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
delay @4 :ObjIndexType;
primitives @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
vpiSize @8 :Int64;
expr @9 :ObjIndexType;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
instances @12 :List(ObjIndexType);
range @13 :UInt64;
modules @14 :List(UInt64);
}
struct Udparray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
delay @4 :ObjIndexType;
primitives @5 :List(ObjIndexType);
vpiName @6 :UInt64;
vpiFullName @7 :UInt64;
vpiSize @8 :Int64;
expr @9 :ObjIndexType;
leftexpr @10 :ObjIndexType;
rightexpr @11 :ObjIndexType;
instances @12 :List(ObjIndexType);
range @13 :UInt64;
modules @14 :List(UInt64);
}
struct Arraynet {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Logicvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Arrayvar {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Namedevent {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Namedeventarray {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Specparam {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Classdefn {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
}
struct Interface {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiIndex @4 :UInt64;
exprdist @5 :ObjIndexType;
instancearray @6 :ObjIndexType;
process @7 :List(ObjIndexType);
interfacetfdecls @8 :List(UInt64);
modports @9 :List(UInt64);
globalclocking @10 :UInt64;
defaultclocking @11 :UInt64;
modpaths @12 :List(UInt64);
contassigns @13 :List(UInt64);
interfaces @14 :List(UInt64);
interfacearrays @15 :List(UInt64);
vpiDefName @16 :UInt64;
vpiArrayMember @17 :Bool;
vpiCellInstance @18 :Bool;
vpiDefNetType @19 :Int64;
vpiDefFile @20 :UInt64;
vpiDefDelayMode @21 :Int64;
vpiProtected @22 :Bool;
vpiTimePrecision @23 :Int64;
vpiTimeUnit @24 :Int64;
vpiUnconnDrive @25 :Int64;
vpiLibrary @26 :UInt64;
vpiCell @27 :UInt64;
vpiConfig @28 :UInt64;
vpiAutomatic @29 :Bool;
vpiTop @30 :Bool;
taskfunc @31 :List(ObjIndexType);
net @32 :List(ObjIndexType);
arraynet @33 :List(ObjIndexType);
assertion @34 :List(ObjIndexType);
typespec @35 :List(ObjIndexType);
classdefn @36 :List(ObjIndexType);
instance @37 :ObjIndexType;
programs @38 :List(UInt64);
programarrays @39 :List(UInt64);
namedevent @40 :List(UInt64);
namedeventarray @41 :List(UInt64);
specparam @42 :List(UInt64);
module @43 :UInt64;
vpiName @44 :UInt64;
vpiFullName @45 :UInt64;
concurrentassertions @46 :List(ObjIndexType);
variables @47 :List(ObjIndexType);
parameters @48 :List(ObjIndexType);
propertydecls @49 :List(UInt64);
sequencedecls @50 :List(UInt64);
namedevents @51 :List(UInt64);
namedeventarrays @52 :List(UInt64);
virtualinterfacevars @53 :List(UInt64);
logicvar @54 :List(UInt64);
arrayvar @55 :List(UInt64);
arrayvarmem @56 :List(UInt64);
}
struct Program {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiIndex @4 :UInt64;
instancearray @5 :ObjIndexType;
exprdist @6 :ObjIndexType;
process @7 :List(ObjIndexType);
defaultclocking @8 :UInt64;
interfaces @9 :List(UInt64);
interfacearrays @10 :List(UInt64);
contassigns @11 :List(UInt64);
clockingblocks @12 :List(UInt64);
vpiDefName @13 :UInt64;
vpiArrayMember @14 :Bool;
vpiCellInstance @15 :Bool;
vpiDefNetType @16 :Int64;
vpiDefFile @17 :UInt64;
vpiDefDelayMode @18 :Int64;
vpiProtected @19 :Bool;
vpiTimePrecision @20 :Int64;
vpiTimeUnit @21 :Int64;
vpiUnconnDrive @22 :Int64;
vpiLibrary @23 :UInt64;
vpiCell @24 :UInt64;
vpiConfig @25 :UInt64;
vpiAutomatic @26 :Bool;
vpiTop @27 :Bool;
taskfunc @28 :List(ObjIndexType);
net @29 :List(ObjIndexType);
arraynet @30 :List(ObjIndexType);
assertion @31 :List(ObjIndexType);
typespec @32 :List(ObjIndexType);
classdefn @33 :List(ObjIndexType);
instance @34 :ObjIndexType;
programs @35 :List(UInt64);
programarrays @36 :List(UInt64);
namedevent @37 :List(UInt64);
namedeventarray @38 :List(UInt64);
specparam @39 :List(UInt64);
module @40 :UInt64;
vpiName @41 :UInt64;
vpiFullName @42 :UInt64;
concurrentassertions @43 :List(ObjIndexType);
variables @44 :List(ObjIndexType);
parameters @45 :List(ObjIndexType);
propertydecls @46 :List(UInt64);
sequencedecls @47 :List(UInt64);
namedevents @48 :List(UInt64);
namedeventarrays @49 :List(UInt64);
virtualinterfacevars @50 :List(UInt64);
logicvar @51 :List(UInt64);
arrayvar @52 :List(UInt64);
arrayvarmem @53 :List(UInt64);
}
struct Package {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiUnit @4 :Bool;
vpiDefName @5 :UInt64;
vpiArrayMember @6 :Bool;
vpiCellInstance @7 :Bool;
vpiDefNetType @8 :Int64;
vpiDefFile @9 :UInt64;
vpiDefDelayMode @10 :Int64;
vpiProtected @11 :Bool;
vpiTimePrecision @12 :Int64;
vpiTimeUnit @13 :Int64;
vpiUnconnDrive @14 :Int64;
vpiLibrary @15 :UInt64;
vpiCell @16 :UInt64;
vpiConfig @17 :UInt64;
vpiAutomatic @18 :Bool;
vpiTop @19 :Bool;
taskfunc @20 :List(ObjIndexType);
net @21 :List(ObjIndexType);
arraynet @22 :List(ObjIndexType);
assertion @23 :List(ObjIndexType);
typespec @24 :List(ObjIndexType);
classdefn @25 :List(ObjIndexType);
instance @26 :ObjIndexType;
programs @27 :List(UInt64);
programarrays @28 :List(UInt64);
namedevent @29 :List(UInt64);
namedeventarray @30 :List(UInt64);
specparam @31 :List(UInt64);
module @32 :UInt64;
vpiName @33 :UInt64;
vpiFullName @34 :UInt64;
concurrentassertions @35 :List(ObjIndexType);
variables @36 :List(ObjIndexType);
parameters @37 :List(ObjIndexType);
propertydecls @38 :List(UInt64);
sequencedecls @39 :List(UInt64);
namedevents @40 :List(UInt64);
namedeventarrays @41 :List(UInt64);
virtualinterfacevars @42 :List(UInt64);
logicvar @43 :List(UInt64);
arrayvar @44 :List(UInt64);
arrayvarmem @45 :List(UInt64);
}
struct Module {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiIndex @4 :UInt64;
vpiTopModule @5 :Bool;
vpiDefDecayTime @6 :Int64;
exprdist @7 :ObjIndexType;
instancearray @8 :ObjIndexType;
scope @9 :List(ObjIndexType);
process @10 :List(ObjIndexType);
primitives @11 :List(ObjIndexType);
primitivearrays @12 :List(ObjIndexType);
globalclocking @13 :UInt64;
defaultclocking @14 :UInt64;
modulearray @15 :UInt64;
ports @16 :List(UInt64);
interfaces @17 :List(UInt64);
interfacearrays @18 :List(UInt64);
contassigns @19 :List(UInt64);
modules @20 :List(UInt64);
modulearrays @21 :List(UInt64);
modpaths @22 :List(UInt64);
tchks @23 :List(UInt64);
defparams @24 :List(UInt64);
iodecls @25 :List(UInt64);
aliasstmts @26 :List(UInt64);
clockingblocks @27 :List(UInt64);
vpiDefName @28 :UInt64;
vpiArrayMember @29 :Bool;
vpiCellInstance @30 :Bool;
vpiDefNetType @31 :Int64;
vpiDefFile @32 :UInt64;
vpiDefDelayMode @33 :Int64;
vpiProtected @34 :Bool;
vpiTimePrecision @35 :Int64;
vpiTimeUnit @36 :Int64;
vpiUnconnDrive @37 :Int64;
vpiLibrary @38 :UInt64;
vpiCell @39 :UInt64;
vpiConfig @40 :UInt64;
vpiAutomatic @41 :Bool;
vpiTop @42 :Bool;
taskfunc @43 :List(ObjIndexType);
net @44 :List(ObjIndexType);
arraynet @45 :List(ObjIndexType);
assertion @46 :List(ObjIndexType);
typespec @47 :List(ObjIndexType);
classdefn @48 :List(ObjIndexType);
instance @49 :ObjIndexType;
programs @50 :List(UInt64);
programarrays @51 :List(UInt64);
namedevent @52 :List(UInt64);
namedeventarray @53 :List(UInt64);
specparam @54 :List(UInt64);
module @55 :UInt64;
vpiName @56 :UInt64;
vpiFullName @57 :UInt64;
concurrentassertions @58 :List(ObjIndexType);
variables @59 :List(ObjIndexType);
parameters @60 :List(ObjIndexType);
propertydecls @61 :List(UInt64);
sequencedecls @62 :List(UInt64);
namedevents @63 :List(UInt64);
namedeventarrays @64 :List(UInt64);
virtualinterfacevars @65 :List(UInt64);
logicvar @66 :List(UInt64);
arrayvar @67 :List(UInt64);
arrayvarmem @68 :List(UInt64);
}
struct Design {
vpiParent @0 :UInt64;
uhdmParentType @1 :UInt64;
vpiFile @2 :UInt64;
vpiLineNo @3 :UInt32;
vpiName @4 :UInt64;
allModules @5 :List(UInt64);
topModules @6 :List(UInt64);
allPrograms @7 :List(UInt64);
allPackages @8 :List(UInt64);
}



