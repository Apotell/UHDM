// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: UHDM.capnp

#include "UHDM.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<36> b_b2bce98887da19bc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    188,  25, 218, 135, 136, 233, 188, 178,
     15,   0,   0,   0,   1,   0,   0,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  85,
    104, 100, 109,  82, 111, 111, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     36,   0,   0,   0,   2,   0,   1,   0,
    100, 101, 115, 105, 103, 110, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4,   3,   9,  82, 251, 142, 186, 188,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b2bce98887da19bc = b_b2bce98887da19bc.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_b2bce98887da19bc[] = {
  &s_bcba8efb52090304,
};
static const uint16_t m_b2bce98887da19bc[] = {0};
static const uint16_t i_b2bce98887da19bc[] = {0};
const ::capnp::_::RawSchema s_b2bce98887da19bc = {
  0xb2bce98887da19bc, b_b2bce98887da19bc.words, 36, d_b2bce98887da19bc, m_b2bce98887da19bc,
  1, 1, i_b2bce98887da19bc, nullptr, nullptr, { &s_b2bce98887da19bc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_c4de5d61fdda1fc2 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    194,  31, 218, 253,  97,  93, 222, 196,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  80,
    114, 111,  99, 101, 115, 115,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_c4de5d61fdda1fc2 = b_c4de5d61fdda1fc2.words;
#if !CAPNP_LITE
static const uint16_t m_c4de5d61fdda1fc2[] = {1, 0};
static const uint16_t i_c4de5d61fdda1fc2[] = {0, 1};
const ::capnp::_::RawSchema s_c4de5d61fdda1fc2 = {
  0xc4de5d61fdda1fc2, b_c4de5d61fdda1fc2.words, 49, nullptr, m_c4de5d61fdda1fc2,
  0, 2, i_c4de5d61fdda1fc2, nullptr, nullptr, { &s_c4de5d61fdda1fc2, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_809d8aea310cd2d3 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    211, 210,  12,  49, 234, 138, 157, 128,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 170,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  83,
     99, 111, 112, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_809d8aea310cd2d3 = b_809d8aea310cd2d3.words;
#if !CAPNP_LITE
static const uint16_t m_809d8aea310cd2d3[] = {1, 0};
static const uint16_t i_809d8aea310cd2d3[] = {0, 1};
const ::capnp::_::RawSchema s_809d8aea310cd2d3 = {
  0x809d8aea310cd2d3, b_809d8aea310cd2d3.words, 49, nullptr, m_809d8aea310cd2d3,
  0, 2, i_809d8aea310cd2d3, nullptr, nullptr, { &s_809d8aea310cd2d3, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_f204710c1a739934 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     52, 153, 115,  26,  12, 113,   4, 242,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 116, 101, 114, 102,  97,  99, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f204710c1a739934 = b_f204710c1a739934.words;
#if !CAPNP_LITE
static const uint16_t m_f204710c1a739934[] = {1, 0};
static const uint16_t i_f204710c1a739934[] = {0, 1};
const ::capnp::_::RawSchema s_f204710c1a739934 = {
  0xf204710c1a739934, b_f204710c1a739934.words, 50, nullptr, m_f204710c1a739934,
  0, 2, i_f204710c1a739934, nullptr, nullptr, { &s_f204710c1a739934, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_a0c61698af16b048 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     72, 176,  22, 175, 152,  22, 198, 160,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 116, 101, 114, 102,  97,  99, 101,
     97, 114, 114,  97, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a0c61698af16b048 = b_a0c61698af16b048.words;
#if !CAPNP_LITE
static const uint16_t m_a0c61698af16b048[] = {1, 0};
static const uint16_t i_a0c61698af16b048[] = {0, 1};
const ::capnp::_::RawSchema s_a0c61698af16b048 = {
  0xa0c61698af16b048, b_a0c61698af16b048.words, 50, nullptr, m_a0c61698af16b048,
  0, 2, i_a0c61698af16b048, nullptr, nullptr, { &s_a0c61698af16b048, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_9227d3f15c9cc33f = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     63, 195, 156,  92, 241, 211,  39, 146,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 210,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  67,
    111, 110, 116,  97, 115, 115, 105, 103,
    110,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9227d3f15c9cc33f = b_9227d3f15c9cc33f.words;
#if !CAPNP_LITE
static const uint16_t m_9227d3f15c9cc33f[] = {1, 0};
static const uint16_t i_9227d3f15c9cc33f[] = {0, 1};
const ::capnp::_::RawSchema s_9227d3f15c9cc33f = {
  0x9227d3f15c9cc33f, b_9227d3f15c9cc33f.words, 50, nullptr, m_9227d3f15c9cc33f,
  0, 2, i_9227d3f15c9cc33f, nullptr, nullptr, { &s_9227d3f15c9cc33f, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_f71f31bc84a287dc = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    220, 135, 162, 132, 188,  49,  31, 247,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  80,
    111, 114, 116,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f71f31bc84a287dc = b_f71f31bc84a287dc.words;
#if !CAPNP_LITE
static const uint16_t m_f71f31bc84a287dc[] = {1, 0};
static const uint16_t i_f71f31bc84a287dc[] = {0, 1};
const ::capnp::_::RawSchema s_f71f31bc84a287dc = {
  0xf71f31bc84a287dc, b_f71f31bc84a287dc.words, 49, nullptr, m_f71f31bc84a287dc,
  0, 2, i_f71f31bc84a287dc, nullptr, nullptr, { &s_f71f31bc84a287dc, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_e5223805a4f89b66 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    102, 155, 248, 164,   5,  56,  34, 229,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 218,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  77,
    111, 100, 117, 108, 101,  97, 114, 114,
     97, 121,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e5223805a4f89b66 = b_e5223805a4f89b66.words;
#if !CAPNP_LITE
static const uint16_t m_e5223805a4f89b66[] = {1, 0};
static const uint16_t i_e5223805a4f89b66[] = {0, 1};
const ::capnp::_::RawSchema s_e5223805a4f89b66 = {
  0xe5223805a4f89b66, b_e5223805a4f89b66.words, 50, nullptr, m_e5223805a4f89b66,
  0, 2, i_e5223805a4f89b66, nullptr, nullptr, { &s_e5223805a4f89b66, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_ca2c53a62aa79635 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     53, 150, 167,  42, 166,  83,  44, 202,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  80,
    114, 105, 109, 105, 116, 105, 118, 101,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ca2c53a62aa79635 = b_ca2c53a62aa79635.words;
#if !CAPNP_LITE
static const uint16_t m_ca2c53a62aa79635[] = {1, 0};
static const uint16_t i_ca2c53a62aa79635[] = {0, 1};
const ::capnp::_::RawSchema s_ca2c53a62aa79635 = {
  0xca2c53a62aa79635, b_ca2c53a62aa79635.words, 50, nullptr, m_ca2c53a62aa79635,
  0, 2, i_ca2c53a62aa79635, nullptr, nullptr, { &s_ca2c53a62aa79635, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_e63ecf2ed249ea72 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    114, 234,  73, 210,  46, 207,  62, 230,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  80,
    114, 105, 109, 105, 116, 105, 118, 101,
     97, 114, 114,  97, 121,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e63ecf2ed249ea72 = b_e63ecf2ed249ea72.words;
#if !CAPNP_LITE
static const uint16_t m_e63ecf2ed249ea72[] = {1, 0};
static const uint16_t i_e63ecf2ed249ea72[] = {0, 1};
const ::capnp::_::RawSchema s_e63ecf2ed249ea72 = {
  0xe63ecf2ed249ea72, b_e63ecf2ed249ea72.words, 50, nullptr, m_e63ecf2ed249ea72,
  0, 2, i_e63ecf2ed249ea72, nullptr, nullptr, { &s_e63ecf2ed249ea72, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_b0574b7e87c89580 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    128, 149, 200, 135, 126,  75,  87, 176,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 186,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  77,
    111, 100, 112,  97, 116, 104,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b0574b7e87c89580 = b_b0574b7e87c89580.words;
#if !CAPNP_LITE
static const uint16_t m_b0574b7e87c89580[] = {1, 0};
static const uint16_t i_b0574b7e87c89580[] = {0, 1};
const ::capnp::_::RawSchema s_b0574b7e87c89580 = {
  0xb0574b7e87c89580, b_b0574b7e87c89580.words, 49, nullptr, m_b0574b7e87c89580,
  0, 2, i_b0574b7e87c89580, nullptr, nullptr, { &s_b0574b7e87c89580, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_f4c7c9090f7f65ff = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    255, 101, 127,  15,   9, 201, 199, 244,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 162,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  84,
     99, 104, 107,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f4c7c9090f7f65ff = b_f4c7c9090f7f65ff.words;
#if !CAPNP_LITE
static const uint16_t m_f4c7c9090f7f65ff[] = {1, 0};
static const uint16_t i_f4c7c9090f7f65ff[] = {0, 1};
const ::capnp::_::RawSchema s_f4c7c9090f7f65ff = {
  0xf4c7c9090f7f65ff, b_f4c7c9090f7f65ff.words, 49, nullptr, m_f4c7c9090f7f65ff,
  0, 2, i_f4c7c9090f7f65ff, nullptr, nullptr, { &s_f4c7c9090f7f65ff, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_fadf6fefcc8670a1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161, 112, 134, 204, 239, 111, 223, 250,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  68,
    101, 102, 112,  97, 114,  97, 109,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_fadf6fefcc8670a1 = b_fadf6fefcc8670a1.words;
#if !CAPNP_LITE
static const uint16_t m_fadf6fefcc8670a1[] = {1, 0};
static const uint16_t i_fadf6fefcc8670a1[] = {0, 1};
const ::capnp::_::RawSchema s_fadf6fefcc8670a1 = {
  0xfadf6fefcc8670a1, b_fadf6fefcc8670a1.words, 49, nullptr, m_fadf6fefcc8670a1,
  0, 2, i_fadf6fefcc8670a1, nullptr, nullptr, { &s_fadf6fefcc8670a1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_838f7452c487badf = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    223, 186, 135, 196,  82, 116, 143, 131,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  73,
    111, 100, 101,  99, 108,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_838f7452c487badf = b_838f7452c487badf.words;
#if !CAPNP_LITE
static const uint16_t m_838f7452c487badf[] = {1, 0};
static const uint16_t i_838f7452c487badf[] = {0, 1};
const ::capnp::_::RawSchema s_838f7452c487badf = {
  0x838f7452c487badf, b_838f7452c487badf.words, 49, nullptr, m_838f7452c487badf,
  0, 2, i_838f7452c487badf, nullptr, nullptr, { &s_838f7452c487badf, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_f171f28f75e452e6 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    230,  82, 228, 117, 143, 242, 113, 241,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 202,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  65,
    108, 105,  97, 115, 115, 116, 109, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f171f28f75e452e6 = b_f171f28f75e452e6.words;
#if !CAPNP_LITE
static const uint16_t m_f171f28f75e452e6[] = {1, 0};
static const uint16_t i_f171f28f75e452e6[] = {0, 1};
const ::capnp::_::RawSchema s_f171f28f75e452e6 = {
  0xf171f28f75e452e6, b_f171f28f75e452e6.words, 50, nullptr, m_f171f28f75e452e6,
  0, 2, i_f171f28f75e452e6, nullptr, nullptr, { &s_f171f28f75e452e6, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_cfa270b7ddc80a04 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4,  10, 200, 221, 183, 112, 162, 207,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  67,
    108, 111,  99, 107, 105, 110, 103,  98,
    108, 111,  99, 107,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cfa270b7ddc80a04 = b_cfa270b7ddc80a04.words;
#if !CAPNP_LITE
static const uint16_t m_cfa270b7ddc80a04[] = {1, 0};
static const uint16_t i_cfa270b7ddc80a04[] = {0, 1};
const ::capnp::_::RawSchema s_cfa270b7ddc80a04 = {
  0xcfa270b7ddc80a04, b_cfa270b7ddc80a04.words, 50, nullptr, m_cfa270b7ddc80a04,
  0, 2, i_cfa270b7ddc80a04, nullptr, nullptr, { &s_cfa270b7ddc80a04, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<50> b_b56a367f43dc01de = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    222,   1, 220,  67, 127,  54, 106, 181,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 234,   0,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  73,
    110, 115, 116,  97, 110,  99, 101,  97,
    114, 114,  97, 121,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     49,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     48,   0,   0,   0,   3,   0,   1,   0,
     60,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_b56a367f43dc01de = b_b56a367f43dc01de.words;
#if !CAPNP_LITE
static const uint16_t m_b56a367f43dc01de[] = {1, 0};
static const uint16_t i_b56a367f43dc01de[] = {0, 1};
const ::capnp::_::RawSchema s_b56a367f43dc01de = {
  0xb56a367f43dc01de, b_b56a367f43dc01de.words, 50, nullptr, m_b56a367f43dc01de,
  0, 2, i_b56a367f43dc01de, nullptr, nullptr, { &s_b56a367f43dc01de, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<457> b_ff343c185370b513 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     19, 181, 112,  83,  24,  60,  52, 255,
     15,   0,   0,   0,   1,   0,   2,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
     20,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  71,   5,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  77,
    111, 100, 117, 108, 101,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     96,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   2,   0,   0,   3,   0,   1,   0,
    156,   2,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    153,   2,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    152,   2,   0,   0,   3,   0,   1,   0,
    164,   2,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    161,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    156,   2,   0,   0,   3,   0,   1,   0,
    168,   2,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,  64,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    165,   2,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    164,   2,   0,   0,   3,   0,   1,   0,
    176,   2,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   2,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    172,   2,   0,   0,   3,   0,   1,   0,
    184,   2,   0,   0,   2,   0,   1,   0,
      5,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   5,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    181,   2,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    180,   2,   0,   0,   3,   0,   1,   0,
    192,   2,   0,   0,   2,   0,   1,   0,
      6,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   6,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    189,   2,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    184,   2,   0,   0,   3,   0,   1,   0,
    212,   2,   0,   0,   2,   0,   1,   0,
      7,   0,   0,   0,   3,   0,   0,   0,
      0,   0,   1,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    209,   2,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    204,   2,   0,   0,   3,   0,   1,   0,
    232,   2,   0,   0,   2,   0,   1,   0,
      8,   0,   0,   0,   4,   0,   0,   0,
      0,   0,   1,   0,   8,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    229,   2,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    228,   2,   0,   0,   3,   0,   1,   0,
      0,   3,   0,   0,   2,   0,   1,   0,
      9,   0,   0,   0,   5,   0,   0,   0,
      0,   0,   1,   0,   9,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    253,   2,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    252,   2,   0,   0,   3,   0,   1,   0,
     24,   3,   0,   0,   2,   0,   1,   0,
     10,   0,   0,   0,   6,   0,   0,   0,
      0,   0,   1,   0,  10,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   3,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     20,   3,   0,   0,   3,   0,   1,   0,
     32,   3,   0,   0,   2,   0,   1,   0,
     11,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   1,   0,  11,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   3,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     28,   3,   0,   0,   3,   0,   1,   0,
     40,   3,   0,   0,   2,   0,   1,   0,
     12,   0,   0,   0,   8,   0,   0,   0,
      0,   0,   1,   0,  12,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   3,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     32,   3,   0,   0,   3,   0,   1,   0,
     60,   3,   0,   0,   2,   0,   1,   0,
     13,   0,   0,   0,   9,   0,   0,   0,
      0,   0,   1,   0,  13,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     57,   3,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   3,   0,   0,   3,   0,   1,   0,
     84,   3,   0,   0,   2,   0,   1,   0,
     14,   0,   0,   0,  10,   0,   0,   0,
      0,   0,   1,   0,  14,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   3,   0,   0, 130,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   3,   0,   0,   3,   0,   1,   0,
    108,   3,   0,   0,   2,   0,   1,   0,
     15,   0,   0,   0,  11,   0,   0,   0,
      0,   0,   1,   0,  15,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105,   3,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   3,   0,   0,   3,   0,   1,   0,
    132,   3,   0,   0,   2,   0,   1,   0,
     16,   0,   0,   0,  12,   0,   0,   0,
      0,   0,   1,   0,  16,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   3,   0,   0,   3,   0,   1,   0,
    152,   3,   0,   0,   2,   0,   1,   0,
     17,   0,   0,   0,  13,   0,   0,   0,
      0,   0,   1,   0,  17,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    149,   3,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    148,   3,   0,   0,   3,   0,   1,   0,
    176,   3,   0,   0,   2,   0,   1,   0,
     18,   0,   0,   0,  14,   0,   0,   0,
      0,   0,   1,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    173,   3,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   3,   0,   0,   3,   0,   1,   0,
    196,   3,   0,   0,   2,   0,   1,   0,
     19,   0,   0,   0,  15,   0,   0,   0,
      0,   0,   1,   0,  19,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    193,   3,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    188,   3,   0,   0,   3,   0,   1,   0,
    216,   3,   0,   0,   2,   0,   1,   0,
     20,   0,   0,   0,  16,   0,   0,   0,
      0,   0,   1,   0,  20,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    213,   3,   0,   0,  74,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    212,   3,   0,   0,   3,   0,   1,   0,
    240,   3,   0,   0,   2,   0,   1,   0,
     21,   0,   0,   0,  17,   0,   0,   0,
      0,   0,   1,   0,  21,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    237,   3,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    232,   3,   0,   0,   3,   0,   1,   0,
      4,   4,   0,   0,   2,   0,   1,   0,
     22,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   1,   0,  22,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   4,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   4,   0,   0,   3,   0,   1,   0,
     28,   4,   0,   0,   2,   0,   1,   0,
     23,   0,   0,   0,  19,   0,   0,   0,
      0,   0,   1,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   4,   0,   0, 114,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     24,   4,   0,   0,   3,   0,   1,   0,
     52,   4,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 112, 105,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 112, 105,  84, 111, 112,  77, 111,
    100, 117, 108, 101,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 112, 105,  68, 101, 102,  68, 101,
     99,  97, 121,  84, 105, 109, 101,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 115, 116,  97, 110,  99, 101,
     97, 114, 114,  97, 121,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    222,   1, 220,  67, 127,  54, 106, 181,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115,  99, 111, 112, 101,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    211, 210,  12,  49, 234, 138, 157, 128,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 111,  99, 101, 115, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    194,  31, 218, 253,  97,  93, 222, 196,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 105, 109, 105, 116, 105, 118,
    101,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     53, 150, 167,  42, 166,  83,  44, 202,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 114, 105, 109, 105, 116, 105, 118,
    101,  97, 114, 114,  97, 121,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    114, 234,  73, 210,  46, 207,  62, 230,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    103, 108, 111,  98,  97, 108,  99, 108,
    111,  99, 107, 105, 110, 103,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4,  10, 200, 221, 183, 112, 162, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102,  97, 117, 108, 116,  99,
    108, 111,  99, 107, 105, 110, 103,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4,  10, 200, 221, 183, 112, 162, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    112, 111, 114, 116, 115,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    220, 135, 162, 132, 188,  49,  31, 247,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 102,  97,  99,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     52, 153, 115,  26,  12, 113,   4, 242,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 110, 116, 101, 114, 102,  97,  99,
    101,  97, 114, 114,  97, 121, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     72, 176,  22, 175, 152,  22, 198, 160,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116,  97, 115, 115, 105,
    103, 110, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     63, 195, 156,  92, 241, 211,  39, 146,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 117, 108, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 181, 112,  83,  24,  60,  52, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 117, 108, 101,  97, 114,
    114,  97, 121,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    102, 155, 248, 164,   5,  56,  34, 229,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109, 111, 100, 112,  97, 116, 104,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    128, 149, 200, 135, 126,  75,  87, 176,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,  99, 104, 107,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    255, 101, 127,  15,   9, 201, 199, 244,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100, 101, 102, 112,  97, 114,  97, 109,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    161, 112, 134, 204, 239, 111, 223, 250,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    105, 111, 100, 101,  99, 108,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    223, 186, 135, 196,  82, 116, 143, 131,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 105,  97, 115, 115, 116, 109,
    116,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    230,  82, 228, 117, 143, 242, 113, 241,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 108, 111,  99, 107, 105, 110, 103,
     98, 108, 111,  99, 107,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      4,  10, 200, 221, 183, 112, 162, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ff343c185370b513 = b_ff343c185370b513.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ff343c185370b513[] = {
  &s_809d8aea310cd2d3,
  &s_838f7452c487badf,
  &s_9227d3f15c9cc33f,
  &s_a0c61698af16b048,
  &s_b0574b7e87c89580,
  &s_b56a367f43dc01de,
  &s_c4de5d61fdda1fc2,
  &s_ca2c53a62aa79635,
  &s_cfa270b7ddc80a04,
  &s_e5223805a4f89b66,
  &s_e63ecf2ed249ea72,
  &s_f171f28f75e452e6,
  &s_f204710c1a739934,
  &s_f4c7c9090f7f65ff,
  &s_f71f31bc84a287dc,
  &s_fadf6fefcc8670a1,
  &s_ff343c185370b513,
};
static const uint16_t m_ff343c185370b513[] = {22, 23, 15, 11, 20, 10, 5, 14, 13, 21, 18, 17, 16, 12, 8, 9, 7, 6, 19, 1, 4, 2, 0, 3};
static const uint16_t i_ff343c185370b513[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23};
const ::capnp::_::RawSchema s_ff343c185370b513 = {
  0xff343c185370b513, b_ff343c185370b513.words, 457, d_ff343c185370b513, m_ff343c185370b513,
  17, 24, i_ff343c185370b513, nullptr, nullptr, { &s_ff343c185370b513, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<104> b_bcba8efb52090304 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
      4,   3,   9,  82, 251, 142, 186, 188,
     15,   0,   0,   0,   1,   0,   1,   0,
    119, 104,  85,  41, 145,  41, 247, 255,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 178,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 114,  99,  47,  85,  72,  68,  77,
     46,  99,  97, 112, 110, 112,  58,  68,
    101, 115, 105, 103, 110,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0, 122,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    145,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    144,   0,   0,   0,   3,   0,   1,   0,
    172,   0,   0,   0,   2,   0,   1,   0,
      4,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    169,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    168,   0,   0,   0,   3,   0,   1,   0,
    196,   0,   0,   0,   2,   0,   1,   0,
    118, 112, 105,  80,  97, 114, 101, 110,
    116,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117, 104, 100, 109,  80,  97, 114, 101,
    110, 116,  84, 121, 112, 101,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 112, 105,  78,  97, 109, 101,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97, 108, 108,  77, 111, 100, 117, 108,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 181, 112,  83,  24,  60,  52, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 111, 112,  77, 111, 100, 117, 108,
    101, 115,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     19, 181, 112,  83,  24,  60,  52, 255,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_bcba8efb52090304 = b_bcba8efb52090304.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_bcba8efb52090304[] = {
  &s_ff343c185370b513,
};
static const uint16_t m_bcba8efb52090304[] = {3, 4, 1, 2, 0};
static const uint16_t i_bcba8efb52090304[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_bcba8efb52090304 = {
  0xbcba8efb52090304, b_bcba8efb52090304.words, 104, d_bcba8efb52090304, m_bcba8efb52090304,
  1, 5, i_bcba8efb52090304, nullptr, nullptr, { &s_bcba8efb52090304, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


// UhdmRoot
#ifndef _MSC_VER
constexpr uint16_t UhdmRoot::_capnpPrivate::dataWordSize;
constexpr uint16_t UhdmRoot::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind UhdmRoot::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* UhdmRoot::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* UhdmRoot::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Process
#ifndef _MSC_VER
constexpr uint16_t Process::_capnpPrivate::dataWordSize;
constexpr uint16_t Process::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Process::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Process::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Process::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Scope
#ifndef _MSC_VER
constexpr uint16_t Scope::_capnpPrivate::dataWordSize;
constexpr uint16_t Scope::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Scope::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Scope::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Scope::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Interface
#ifndef _MSC_VER
constexpr uint16_t Interface::_capnpPrivate::dataWordSize;
constexpr uint16_t Interface::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Interface::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Interface::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Interface::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Interfacearray
#ifndef _MSC_VER
constexpr uint16_t Interfacearray::_capnpPrivate::dataWordSize;
constexpr uint16_t Interfacearray::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Interfacearray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Interfacearray::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Interfacearray::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Contassign
#ifndef _MSC_VER
constexpr uint16_t Contassign::_capnpPrivate::dataWordSize;
constexpr uint16_t Contassign::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Contassign::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Contassign::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Contassign::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Port
#ifndef _MSC_VER
constexpr uint16_t Port::_capnpPrivate::dataWordSize;
constexpr uint16_t Port::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Port::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Port::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Port::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Modulearray
#ifndef _MSC_VER
constexpr uint16_t Modulearray::_capnpPrivate::dataWordSize;
constexpr uint16_t Modulearray::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Modulearray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Modulearray::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Modulearray::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Primitive
#ifndef _MSC_VER
constexpr uint16_t Primitive::_capnpPrivate::dataWordSize;
constexpr uint16_t Primitive::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Primitive::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Primitive::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Primitive::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Primitivearray
#ifndef _MSC_VER
constexpr uint16_t Primitivearray::_capnpPrivate::dataWordSize;
constexpr uint16_t Primitivearray::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Primitivearray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Primitivearray::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Primitivearray::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Modpath
#ifndef _MSC_VER
constexpr uint16_t Modpath::_capnpPrivate::dataWordSize;
constexpr uint16_t Modpath::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Modpath::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Modpath::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Modpath::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Tchk
#ifndef _MSC_VER
constexpr uint16_t Tchk::_capnpPrivate::dataWordSize;
constexpr uint16_t Tchk::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Tchk::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Tchk::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Tchk::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Defparam
#ifndef _MSC_VER
constexpr uint16_t Defparam::_capnpPrivate::dataWordSize;
constexpr uint16_t Defparam::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Defparam::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Defparam::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Defparam::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Iodecl
#ifndef _MSC_VER
constexpr uint16_t Iodecl::_capnpPrivate::dataWordSize;
constexpr uint16_t Iodecl::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Iodecl::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Iodecl::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Iodecl::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Aliasstmt
#ifndef _MSC_VER
constexpr uint16_t Aliasstmt::_capnpPrivate::dataWordSize;
constexpr uint16_t Aliasstmt::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Aliasstmt::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Aliasstmt::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Aliasstmt::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Clockingblock
#ifndef _MSC_VER
constexpr uint16_t Clockingblock::_capnpPrivate::dataWordSize;
constexpr uint16_t Clockingblock::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Clockingblock::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Clockingblock::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Clockingblock::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Instancearray
#ifndef _MSC_VER
constexpr uint16_t Instancearray::_capnpPrivate::dataWordSize;
constexpr uint16_t Instancearray::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Instancearray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Instancearray::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Instancearray::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Module
#ifndef _MSC_VER
constexpr uint16_t Module::_capnpPrivate::dataWordSize;
constexpr uint16_t Module::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Module::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Module::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Module::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Design
#ifndef _MSC_VER
constexpr uint16_t Design::_capnpPrivate::dataWordSize;
constexpr uint16_t Design::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Design::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Design::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Design::_capnpPrivate::brand;
#endif  // !CAPNP_LITE



