/*
 Do not modify, auto-generated by script

 Copyright 2019-2020 Alain Dargelas

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */

/*
 * File:   uhdm_visitor.h
 * Author: HS
 *
 * Created on December 14, 2019, 10:03 PM
 */

#ifndef UHDM_UHDMVISITOR_H
#define UHDM_UHDMVISITOR_H
#pragma once

#include <uhdm/uhdm_forward_decl.h>

#include <ostream>
#include <string_view>

namespace uhdm {
class UhdmVisitor final {
 public:
  explicit UhdmVisitor(std::ostream& out) : m_out(out) {}

  void visit(const Any* const object) const;
  void showIds(bool toggle) { m_showIds = toggle; }

 private:
  bool isValid(std::string_view s) const;
  std::ostream& appendIndent(uint32_t indent) const;
  std::ostream& appendObject(const Any* const object, std::string_view separator) const;

  void visitBaseClass(const Any* const object, uint32_t indent) const;
//<VISITOR_PRIVATE_DECLARATIONS>

  void visitAny(const Any* const object, uint32_t indent) const;

 private:
  std::ostream& m_out;
  bool m_showIds = false;
};

}  // namespace uhdm

#endif  // UHDM_UHDMVISITOR_H
